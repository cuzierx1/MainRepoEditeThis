const Asena = require('../events');
const Config = require('../config');
const {MessageType, MessageOptions, Mimetype} = require('@adiwajshing/baileys');
const fs = require('fs');
const axios = require('axios');

// LIST
const EFFECT_DESC = "Set of commands to convert text into effective images."
const NEED_WORD = "*You Must Enter a Word*"

Â Â Â  Asena.addCommand({pattern: 'effectimg', fromMe: true, desc: EFFECT_DESC}, (async (message, match) => {Â Â Â  

Â Â Â  await message.sendMessage('*ðŸŽ¯Cmd* âž¤ .glitch\n*â™¦Desc* âž¤ It Sends a glitch style image of the text provided\nYou must enter the heading and subheading seperated by */* in order!.\n\n*ðŸŽ¯Cmd* âž¤ .underwater\n*â™¦Desc* âž¤ It Sends a ocean image of the text provided\n\n*ðŸŽ¯Cmd* âž¤ .flower\n*â™¦Desc* âž¤ It Sends a flower image of the text provided\n\n*ðŸŽ¯Cmd âž¤* .burn\n*â™¦Desc* âž¤It Sends a half burned paper image of the text provided\n\n*ðŸŽ¯Cm*d .candy\n*â™¦Desc* âž¤It Sends a candy image of the text provided\n\n*ðŸŽ¯Cmd* .wood\n*â™¦Desc* âž¤ It Sends a wood carved image of the text provided.\n\n*ðŸŽ¯Cmd*âž¤ .latte\n*â™¦Desc*âž¤ It put the text as latte art within a coffee cup.\n\n*ðŸŽ¯Cmd* .8bit\n*â™¦Desc*âž¤ Converts the text into an 8bit style image.\nYou must enter the heading and subheading seperated by */* in order!\n\n*ðŸŽ¯Cmd* .shadow\n*â™¦Desc*âž¤ Converts the text into shadow themed image.\n\n*ðŸŽ¯Cmd* âž¤ .harry\n*â™¦Desc*âž¤ Converts the text into a harrypotter themed image.\n\n*ðŸŽ¯Cmd* âž¤ .sparkling\n*â™¦Desc* âž¤ Converts the text into a sparkling themed image\nYou must enter the heading and subheading seperated by */* in order!\n\n*ðŸŽ¯Cmd* âž¤ .watercolour\n*â™¦Desc* âž¤ Converts the text into a watercolour themed image.\n\n*ðŸŽ¯Cmd* âž¤.ninjalogo\n*â™¦Desc* âž¤ Enters the text as the caption for a ninja themed logo.\n\n*ðŸŽ¯Cmd* âž¤ .neonlight\n*â™¦Desc* âž¤ Converts the text into a neonlight themed image.\n\n*ðŸŽ¯Cmd* âž¤.3dtext\n*â™¦Desc*âž¤ Converts the provided text into a 3D style image.');

Â Â Â  }));

Â Â Â  Asena.addCommand({pattern: 'glitch ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

Â Â Â  if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);
Â  
Â  var topText, bottomText;
Â Â Â  if (match[1].includes('/')) {
Â Â Â Â Â Â Â  var split = match[1].split('/');
Â Â Â Â Â Â Â  bottomText = split[1];
Â Â Â Â Â Â Â  topText = split[0];
}

Â Â Â  var webimage = await axios.get(`https://videfikri.com/api/textmaker/tiktokeffect/?text1=${topText}&text2=${bottomText}`, { responseType: 'arraybuffer' })

Â Â  await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: '```Made by```*Queen Al'})

Â Â Â  }));

Â Â Â  Asena.addCommand({pattern: 'latte ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

Â Â Â  if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

Â Â Â  var webimage = await axios.get(`https://videfikri.com/api/textmaker/coffeecup/?text=${match[1]}`, { responseType: 'arraybuffer' })

Â Â Â  await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Made by Felix'})

Â Â Â  }));


Â Â Â  Asena.addCommand({pattern: 'wood ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

Â Â Â  if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

Â Â Â  var webimage = await axios.get(`https://videfikri.com/api/textmaker/woodblock/?text=${match[1]}`, { responseType: 'arraybuffer' })

Â Â Â  await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Made by Felix'})

Â Â Â  }));

Â Â Â  Asena.addCommand({pattern: '8bit ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

Â Â Â  if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);
Â  
Â  var topText, bottomText;
Â Â Â  if (match[1].includes('/')) {
Â Â Â Â Â Â Â  var split = match[1].split('/');
Â Â Â Â Â Â Â  bottomText = split[1];
Â Â Â Â Â Â Â  topText = split[0];
}

Â Â Â  var webimage = await axios.get(`https://videfikri.com/api/textmaker/8bit/?text1=${topText}&text2=${bottomText}`, { responseType: 'arraybuffer' })

Â Â Â  await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Made by Felix'})

Â Â Â  }));

Â Â Â  Asena.addCommand({pattern: 'shadow ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

Â Â Â  if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

Â Â Â  var webimage = await axios.get(`https://videfikri.com/api/textmaker/shadowtext/?text=${match[1]}`, { responseType: 'arraybuffer' })

Â  await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Made by Felix'})

Â Â Â  }));

Â Â Â  Asena.addCommand({pattern: 'underwater ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

Â Â Â  if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

Â Â Â  var webimage = await axios.get(`https://videfikri.com/api/textmaker/underwater/?text=${match[1]}`, { responseType: 'arraybuffer' })

Â Â Â  await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Made by Felix'})

Â Â Â  }));

Â Â Â  Asena.addCommand({pattern: 'flower ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

Â Â Â  if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

Â Â Â  var webimage = await axios.get(`https://videfikri.com/api/textmaker/mugflower/?text=${match[1]}`, { responseType: 'arraybuffer' })

Â Â Â  await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Made by Felix'})

Â Â Â  }));

Â Â Â  Asena.addCommand({pattern: 'burn ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

Â Â Â  if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

Â Â Â  var webimage = await axios.get(`https://videfikri.com/api/textmaker/burnpaper/?text=${match[1]}`, { responseType: 'arraybuffer' })

Â Â Â  await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Made by Felix'})

Â Â Â  }));

Â Â Â  Asena.addCommand({pattern: 'candy ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

Â Â Â  if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

Â Â Â  var webimage = await axios.get(`https://videfikri.com/api/textmaker/sweetcandy/?text=${match[1]}`, { responseType: 'arraybuffer' })

Â Â Â  await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Made by Felix'})

Â Â Â  }));

Â Â Â  Asena.addCommand({pattern: 'harrypotter ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

Â Â Â  if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);

Â Â Â  var webimage = await axios.get(`https://videfikri.com/api/textmaker/hpotter/?text=${match[1]}`, { responseType: 'arraybuffer' })

Â Â Â  await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Made by Felix'})

Â Â Â  }));

Â Â Â  Asena.addCommand({pattern: 'sparkling ?(.*)', fromMe: true, dontAddCommandList: true}, (async (message, match) => {

Â Â Â  if (match[1] === '') return await message.client.sendMessage(message.jid,NEED_WORD);
Â  
Â  var topText, bottomText;
Â Â Â  if (match[1].includes('/')) {
Â Â Â Â Â Â Â  var split = match[1].split('/');
Â Â Â Â Â Â Â  bottomText = split[1];
Â Â Â Â Â Â Â  topText = split[0];
}

Â Â Â  var webimage = await axios.get(`https://docs-jojo.herokuapp.com/api/sparkling?text1=${topText}&text2=${bottomText}`, { responseType: 'arraybuffer' })

Â Â Â  await message.client.sendMessage(message.jid,Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, caption: 'Made by Felix'}
